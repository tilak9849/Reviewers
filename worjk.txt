// User schema
model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  password      String
  profilePicture String?
  bio           String?
  dateOfBirth   DateTime?
  registrationDate DateTime @default(now())
  reviews       Review[]
}

// Restaurant schema
model Restaurant {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  address       String
  city          String
  state         String
  zipCode       String
  averageRating Float    @default(0)
  totalReviews  Int      @default(0)
  reviews       Review[]
}

// Review schema
model Review {
  id           Int      @id @default(autoincrement())
  rating       Int
  comment      String?
  date         DateTime @default(now())
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  restaurantId Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}




transaction garney restro ko create ma 






//users  normal
//post login
//post signup
// TODOS: create ,update ,get

admin user 
//post delete  admin only
//post update

user delete garna khojda forign key constaints ley mildaina and user delete garna todo delwt garney
await prisma.todo.delete(where: userId: loggineduser)

await prisma .user.delete(where id : req.params .id)
post update